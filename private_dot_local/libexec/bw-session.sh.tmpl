# Manage the BW_SESSION secret using the keyring

set -e

get_secret() {
{{ if (eq .chezmoi.os "Darwin") }}
  security find-generic-password -a "$USER" -s "$SESSION_KEY" -w 2>/dev/null || true
{{ elif (eq .location "Desktop") }}
  secret-tool lookup user "$USER" key "$SESSION_KEY" 2>/dev/null || true
{{ else }}
  keyctl search @u user "$SESSION_KEY" 2>/dev/null | xargs keyctl read 2>/dev/null || true
{{ endif }}
}

store_secret() {
  token="$1"
{{ if .eq. .chezmoi.os "Darwin" }}
  security add-generic-password -a "$USER" -s "$SESSION_KEY" -w "$token" -U >/dev/null
{{ elif (eq .location "Desktop") }}
  echo -n "$token" | secret-tool store --label="Bitwarden Session" user "$USER" key "$SESSION_KEY"
{{ else }}
  echo -n "$token" | keyctl padd user "$SESSION_KEY" @u >/dev/null
{{ endif }}
}

is_valid() {
  [ -n "$1" ] && BW_SESSION="$1" bw unlock --check >/dev/null 2>&1
}

if [[ -v BW_SESSION ]]; then
   session_token="$(get_secret)"
else 
   session_token="$BW_SESSION"
fi

if is_valid "$session_token"; then
  export BW_SESSION="$session_token"
  return
fi

if ! bw status | grep -q '"loggedIn": true'; then
  # Login (interactive or via env vars)
  bw login || exit 1
fi


# Unlock to get new session token
new_token="$(bw unlock --raw)"

# Save new token to keyring
store_secret "$new_token"

# Export for current shell
export BW_SESSION="$new_token"

